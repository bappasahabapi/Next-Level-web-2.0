// db.practice.find({age: 18})

//-------------------> Syntax:  { <field>: { $eq: <value> } } <-----------------
db.practice.find({ age: { $eq: 18 } });
db.practice.find({ favoutiteColor: { $eq: "Blue" } })

// field fildering: just showing the only favourite color result in the table
db.practice.find({ favoutiteColor: { $eq: "Blue" } }, { favoutiteColor: 1 })



// Female ছাড়া বাকি দেখাবে 
db.practice.find({ gender: { $ne: "Female" } })

//showing the specific field based on condition used projectionsh
db.practice.find(

    { gender: { $ne: "Female" } })
    .projection({ gender: 1 }

    )

db.practice.find(

    { gender: { $ne: "Female" } })
    .projection({ gender: 1, name: 1, email: 1 }

    )

//  -----   Syntax: { field: { $ne: value } }        ----------------------------------------------

db.practice.find({
    age: { $gt: 30 }
}).projection({ name: 1, age: 1 }).sort({ age: -1 })


// ---------------------------------------------------------- 

// , is here and operator
db.practice.find({
    age: { $gte: 18, $lte: 60 }
})
    .projection({ age: 1, name: 1 })
    .sort({ _id: 1 })
    .limit(50)


// { field: { $in: [<value1>, <value2>, ... <valueN> ] } } it works like OR
// it returns only persons have either 18 or 30 age
db.practice.find(
    { age: { $in: [21, 30] } } // conditional part
)
    .projection({})     // display part
    .sort({age:1 })      // sorting part

db.practice.find(
    {gender:'Female', age: { $in: [18, 23]} }
)
    .projection({})
    .sort({age:1 })


// Syntax: { field: { $nin: [ <value1>, <value2> ... <valueN> ] } }
// values provided in the array returns array expect the provided values


db.practice.find(
    {gender:'Female', age: { $nin: [18, 23]} }
)
    .projection({})
    .sort({age:1 })


// ----------------------------------------------------------------- 


// Example:1  [Hoi gaming parbe  emn kauke dite ]

db.practice.find({
    gender:'Female',
    age:{$nin: [18,30,33,46,23]},
    interests:'Gaming'
})
.project({
    gender:1,
    age:1,
    interests:1
})

// Example:2  [Hoi gaming parbe othoba Reading parbe emn kauke dite ]
db.practice.find({
    gender:'Female',
    age:{$nin: [18,30,33,46,23]},
    interests:{$in: ['Gaming','Reading']}
})
.project({
    gender:1,
    age:1,
    interests:1
})


/*
$and
Syntax: { $and: [ { <expression1> }, { <expression2> } , ... , { <expressionN> } ] }
*/

db.practice.find({
    $and: [
        { gender: 'Female' },
        { age: { $lt: 30 } },
        { 'skills.name': 'JAVASCRIPT' }
    ]
})
    .project({
        gender: 1,
        age: 1,
        'skills.name': 1
    })

// { $or: [ { <expression1> }, { <expression2> }, ... , { <expressionN> } ] }


db.practice.find({
    $or: [
        { gender: 'Female' },
        { age: { $lt: 30 } },
        { 'skills.name': 'JAVASCRIPT' },
        { 'skills.name': 'PYTHON' },
    ]
})
    .project({
        gender: 1,
        age: 1,
        'skills.name': 1
    })

// ------------------ for same field hole amra $in use koro


db.practice.find({
    'skills.name': { $in: ['JAVASCRIPT', 'PYTHON'] }
}).project({
    'skills.name': 1
})


// ------------------------- same field e implicit and useable na

db.practice.find({
    age: { $ne: 18 }, age: { $gt: 15 }  // gives error
})
    .project({ age: 1 })

// gives the correct output using explict and
db.practice.find({
    $and: [
        { age: { $ne: 18 } },
        { age: { $gt: 15 } }
    ]
})
    .project({ age: 1 })
    .sort({ age:1 })


// ------------------------------------------------------ 

// $exists  Syntax: { field: { $exists: <boolean> } }

db.practice.find({age:{$exists: true}})
   .projection({"name.firstName":1})

db.practice.find({city:{$exists: false}})
   
db.practice.find({skills:{$exists: true}})


// { field: { $type: [ <BSON type1> , <BSON type2>, ... ] } }
   
db.practice.find({age:{$type: 'int'}})
  
db.practice.find({friends:{$type: 'array'}})
    
    
    // { field: { $type: [ <BSON type1> , <BSON type2>, ... ] } }
db.practice.find({skills:{$size: 0}}).project({skills:1})
  
























